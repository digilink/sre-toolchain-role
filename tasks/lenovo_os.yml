- name: Set hostname 
  ansible.builtin.ini_file:
    path: /etc/ansible/facts.d/csb.fact
    section: host
    option: csb_hostname
    value: "{{ hostname }}"
    ignore_spaces: true
  when: hostname is defined
  register: csb_hostname_change 
  become: true 

- name: Run csb cron if hostname changed 
  ansible.builtin.command: sudo ansible-playbook /usr/share/csb-fedora/csb-cron.yml
  when: csb_hostname_change.changed 
  become: true 

- name: Allow users and service accounts to sudo nopasswd
  community.general.sudoers:
    name: allow-sudo
    state: present
    group: wheel
    commands: ALL
    nopassword: true
  become: true

- name: Install backplane-tools if not present
  ansible.builtin.command:
    cmd: "go install github.com/openshift/backplane-tools@latest"
  args:
    creates: "{{ ansible_env.HOME }}/go/bin/backplane-tools"
  changed_when: false # The 'creates' arg handles state change

- name: Run backplane-tools installer if necessary
  ansible.builtin.command:
    cmd: "{{ ansible_env.HOME }}/go/bin/backplane-tools install all"
  args:
    # ⚠️ Replace 'ocm' with a real file created by the installer
    creates: "{{ ansible_env.HOME }}/go/bin/ocm"
  changed_when: false # The 'creates' arg handles state change

- name: Add Go and Backplane paths to .bashrc
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "export PATH=$PATH:$HOME/go/bin:$HOME/.local/bin/backplane/latest"
    regexp: "^export PATH=.*:\\$HOME/go/bin:\\$HOME/\\.local/bin/backplane/latest$"
    insertafter: EOF
    create: false
    mode: "0644"

- name: Import keys from a list of urls
  ansible.builtin.rpm_key:
    state: present
    key: "{{ item }}"
  with_items: "{{ rpm_gpg_keys }}"
  become: true

- name: Build vscode repo from template
  ansible.builtin.template:
    dest: /etc/yum.repos.d/vscode.repo
    src: vscode.repo.j2
  become: true

- name: Install default OS packages
  ansible.builtin.dnf:
    name: "{{ dnf_packages }}"
    state: installed
  become: true